name: Jekyll site CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Build the site in the jekyll/builder container
      run: |
        docker run \
        -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
        jekyll/builder:latest /bin/bash -c "chmod -R 777 /srv/jekyll && jekyll build --future"

                    - nombre: Caché
  usos: acciones/cache@v4.2.3
  con:
    # Una lista de archivos, directorios y patrones comodín para almacenar en caché y restaurar
    camino:
    # Una clave explícita para restaurar y guardar el caché
    llave:
    # Una cadena multilínea ordenada que enumera las claves con prefijo coincidente, que se utilizan para restaurar la caché obsoleta si no se produce un acierto de caché para la clave. Nota: `cache-hit` devuelve falso en este caso.
    restaurar-claves: # opcional
    # El tamaño del fragmento utilizado para dividir archivos grandes durante la carga, en bytes
    tamaño del fragmento de carga: # opcional
    # Un valor booleano opcional, cuando está habilitado, permite que los ejecutores de Windows guarden o restauren cachés que se pueden restaurar o guardar respectivamente en otras plataformas
    enableCrossOsArchive: # opcional, el valor predeterminado es falso
    # El flujo de trabajo falla si no se encuentra la entrada de caché
    fail-on-cache-miss: # opcional, el valor predeterminado es falso
    # Verifica si existe una entrada de caché para las entradas dadas (clave, claves de restauración) sin descargar el caché
    solo búsqueda: # opcional, el valor predeterminado es falso
    # Ejecute el paso posterior para guardar el caché incluso si falla otro paso anterior
    guardar siempre: # opcional, el valor predeterminado es falso

                      - nombre: Cargar un artefacto de compilación
  usos: acciones/upload-artifact@v4.6.2
  con:
    # Nombre del artefacto
    nombre: # opcional, el valor predeterminado es artefacto
    # Un archivo, directorio o patrón comodín que describe qué cargar
    camino:
    # El comportamiento deseado si no se encuentran archivos utilizando la ruta proporcionada.
Opciones disponibles:
  advertir: emite una advertencia pero no hace que falle la acción
  error: Falla la acción con un mensaje de error
  ignorar: no muestra ninguna advertencia o error, la acción no falla

    if-no-files-found: # opcional, el valor predeterminado es advertir
    # Duración después de la cual el artefacto expirará en días. 0 significa usar la retención predeterminada.
Mínimo 1 día. Máximo 90 días, a menos que se modifique desde la página de configuración del repositorio.

    días de retención: # opcional
    El nivel de compresión de Zlib que se aplicará al archivo de artefactos. El valor puede variar de 0 a 9: - 0: Sin compresión - 1: Máxima velocidad - 6: Compresión predeterminada (igual que GNU Gzip) - 9: Máxima compresión. Los niveles más altos ofrecen una mejor compresión, pero tardan más en completarse. Para archivos grandes que no se comprimen fácilmente, se recomienda un valor de 0 para una carga mucho más rápida.

    nivel de compresión: # opcional, el valor predeterminado es 6
    # Si es verdadero, se eliminará un artefacto con el mismo nombre antes de cargar uno nuevo. Si es falso, la acción fallará si ya existe un artefacto con el nombre especificado. No falla si el artefacto no existe.

    sobrescribir: # opcional, el valor predeterminado es falso
    # Si es verdadero, se incluirán los archivos ocultos en el artefacto. Si es falso, se excluirán.

    include-hidden-files: # opcional, el valor predeterminado es falso

                - nombre: Configurar el SDK de .NET Core
  usos: acciones/setup-dotnet@v3.4.2
  con:
    Versiones opcionales del SDK. Si no se proporciona, se instalará la versión global.json cuando esté disponible. Ejemplos: 2.2.104, 3.1, 3.1.x, 3.x, 6.0.2xx
    dotnet-version: # opcional
    Calidad opcional de la compilación. Los valores posibles son: diario, firmado, validado, vista previa y ga.
    dotnet-quality: # opcional
    # Ubicación opcional de global.json, si su global.json no se encuentra en la raíz del repositorio.
    archivo json global: # opcional
    # Fuente de paquete opcional para configurar la autenticación. Consultará cualquier archivo NuGet.config existente en la raíz del repositorio y proporcionará un archivo NuGet.config temporal utilizando la variable de entorno NUGET_AUTH_TOKEN como ClearTextPassword.
    URL de origen: # opcional
    # PROPIETARIO opcional para usar paquetes de organizaciones/usuarios del Registro de Paquetes de GitHub distintos del propietario del repositorio actual. Solo se usa si también se proporciona una URL de GPR en source-url.
    propietario: # opcional
    # Ubicación opcional de NuGet.config, si su NuGet.config no se encuentra en la raíz del repositorio.
    archivo de configuración: # opcional
    # Entrada opcional para habilitar el almacenamiento en caché de la carpeta de paquetes globales de NuGet
    caché: # opcional
    # Se utiliza para especificar la ruta a un archivo de dependencia: packages.lock.json. Admite comodines o una lista de nombres de archivo para almacenar en caché varias dependencias.
    ruta de dependencia de caché: # opcional
          
                      - nombre: Configurar el entorno Node.js
  usos: acciones/setup-node@v3.9.1
  con:
    # Establezca always-auth en npmrc.
    always-auth: # opcional, el valor predeterminado es falso
    Especificación de la versión a utilizar. Ejemplos: 12.x, 10.15.1, >=10.15.0.
    node-version: # opcional
    Archivo que contiene la especificación de la versión a utilizar. Ejemplos: .nvmrc, .node-version, .tool-versions.
    archivo-versión-nodo: # opcional
    # Arquitectura de destino que usará Node. Ejemplos: x86, x64. Se usará la arquitectura del sistema por defecto.
    arquitectura: # opcional
    # Configure esta opción si desea que la acción busque la última versión disponible que satisfaga la especificación de la versión.
    check-latest: # opcional
    Registro opcional para la autenticación. Se establecerá el registro en archivos .npmrc y .yarnrc a nivel de proyecto y se configurará la autenticación para leer desde env.NODE_AUTH_TOKEN.
    URL del registro: # opcional
    # Ámbito opcional para la autenticación en registros con ámbito. Se recurrirá al propietario del repositorio al usar el registro de paquetes de GitHub (https://npm.pkg.github.com/).
    alcance: # opcional
    # Se usa para extraer distribuciones de nodos de node-versions. Dado que hay un valor predeterminado, normalmente no lo proporciona el usuario. Al ejecutar esta acción en github.com, el valor predeterminado es suficiente. Al ejecutar en GHES, puede pasar un token de acceso personal a github.com si experimenta limitaciones de velocidad.
    token: # opcional, el valor predeterminado es ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Se utiliza para especificar un gestor de paquetes para el almacenamiento en caché en el directorio predeterminado. Valores admitidos: npm, yarn, pnpm.
    caché: # opcional
    # Se utiliza para especificar la ruta a un archivo de dependencia: package-lock.json, yarn.lock, etc. Admite caracteres comodín o una lista de nombres de archivos para almacenar en caché múltiples dependencias.
    ruta de dependencia de caché: # opcional
          
